"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

even_cnt = 0
odd_cnt = 0


def nums(num):
    global even_cnt, odd_cnt
    if num == 0:
        return print(
            f'Количество четных:{even_cnt}, количество нечетных {odd_cnt}')
    else:
        try:
            num = int(num)
            if (num % 10) % 2 == 0:
                even_cnt += 1
                return nums(num // 10)
            else:
                odd_cnt += 1
                return nums(num // 10)
        except ValueError:
            return print('Введите число!')


nums(input('Введите число для подсчета четных/нечетных цифр в нем: '))
