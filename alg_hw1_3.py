"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
# Вариант 1:
# сложность данного решения O(n log n)
comp_salary = {
    'comp1': 50000,
    'comp2': 20000,
    'comp3': 40000,
    'comp4': 55000,
    'comp5': 60000}     # O(1)


sort_companies = sorted(comp_salary.items(),
                        key=lambda x: x[1])[-3:]  # O(n log n)
print(f'Три компании с наибольшей годовой прибылью: {sort_companies}')

# Вариант 2:
# Общая сложность O(n^2)
top_dict = {}   # O(1)
while len(top_dict) < 3:    # O(n)
    for key, val in comp_salary.items():    # O(n)
        if val == max(comp_salary.values()):    # O(1)
            top_dict[key] = val     # O(1)
            comp_salary.popitem()   # O(1)
            break   # O(1)

print(f'Три компании с наибольшей годовой прибылью: {top_dict}')    # O(1)
