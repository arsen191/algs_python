"""
Задание 1.
Выполните профилирование памяти в скриптах
Проанализировать результат и определить программы с
наиболее эффективным использованием памяти.

Примечание: Для анализа возьмите любые 1-3 ваших программы или несколько
вариантов кода для одной и той же задачи. Можно взять задачи с курса Основ или с текущего курса Алгоритмов

Результаты анализа вставьте в виде комментариев к коду.
Также укажите в комментариях версию Python и разрядность вашей ОС.

ВНИМАНИЕ: ЗАДАНИЯ, В КОТОРЫХ БУДУТ ГОЛЫЕ ЦИФРЫ ЗАМЕРОВ (БЕЗ АНАЛИТИКИ)
БУДУТ ПРИНИМАТЬСЯ С ОЦЕНКОЙ УДОВЛЕТВОРИТЕЛЬНО
"""
from memory_profiler import profile


@profile
def func_1():
    new_arr = []
    nums = list(range(50000))
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr


func_1()
"""
Line #    Mem usage    Increment   Line Contents
================================================
    19     15.3 MiB     15.3 MiB   @profile
    20                             def func_1():
    21     15.3 MiB      0.0 MiB       new_arr = []
    22     17.3 MiB      0.1 MiB       nums = [i for i in range(50000)]
    23     18.4 MiB      0.0 MiB       for i in range(len(nums)):
    24     18.4 MiB      0.1 MiB           if nums[i] % 2 == 0:
    25     18.4 MiB      0.2 MiB               new_arr.append(i)
    26     18.4 MiB      0.0 MiB       return new_arr
инкремент появился в следствии создания списка, так как он невелик - оптимизация не требуется
Используется Python 3.8, разрядность ОС 64 бит
"""
