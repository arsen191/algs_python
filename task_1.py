"""
1. Отсортируйте по убыванию методом "пузырька" одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100). Выведите на экран
исходный и отсортированный массивы. Сортировка должна быть реализована в
виде функции. Обязательно доработайте алгоритм (сделайте его умнее).

Идея доработки: если за проход по списку не совершается ни одной сортировки,
то завершение
Обязательно сделайте замеры времени обеих реализаций
и обосновать дала ли оптимизация эффективность

Подсказка: обратите внимание, сортируем не по возрастанию, как в примере,
а по убыванию
"""
from timeit import timeit


def bubble():
    my = [4, 2, 5, 7, 3, 1, 4, 3, 7, 8, 9, 5, 3]
    n = 1
    while n < len(my) - 1:
        for i in range(len(my) - n):
            if my[i] < my[i + 1]:
                my[i], my[i + 1] = my[i + 1], my[i]
        n += 1
    return my


print(bubble())
print(timeit('bubble()', setup='from __main__ import bubble', number=100000))
